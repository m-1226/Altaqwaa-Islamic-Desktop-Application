const { ipcRenderer } = require('electron');
const fs = require('fs-extra');
const path = require('path');
const moment = require('moment-timezone');
const adhanModule = require('../modules/adhan.js')

window.addEventListener('DOMContentLoaded', async (e) => {
    e.preventDefault();

    let App_Path = await ipcRenderer?.invoke('App_Path');
    let settings = fs.readJsonSync(path.join(App_Path, './data/settings.json'));
    let variables_css = document.getElementById("variables_css");
    let icon_closed_window = document.getElementById("icon_closed_window");

    document.getElementById('closed').addEventListener('click', e => {
        document.getElementById('audio').pause();
        document.getElementById('audio').currentTime = 0;
        ipcRenderer.send('closed3');
    });

    if (settings?.dark_mode) {
        // stylesheet 
        variables_css.href = '../public/css/var.css';
        // window controls
        icon_closed_window.srcset = '../public/icon/closed.png';
    }

    else if (settings?.dark_mode === false) {
        // stylesheet 
        variables_css.href = '../public/css/var_light.css';
        // window controls
        icon_closed_window.srcset = '../public/icon/dark/closed.png';
    }


    while (true) {

        await new Promise(resolve => setTimeout(resolve, 20000));
        let audioJson = fs.readJsonSync(path.join(App_Path, './data/audio_window.json'));
        let location = fs.readJsonSync(path.join(App_Path, './data/location.json'));
        let settings = fs.readJsonSync(path.join(App_Path, './data/settings.json'));
        let data = adhanModule(path, fs, App_Path, location);
        let time_now_adhan = moment().tz(location?.timezone).format('LT');
        let time_now_adhkar = moment().tz(location?.timezone).format('HH:mm');
        // const targetTime = new Date(data.dhuhr); // Assuming data.dhuhr is a valid time string
        // const fifteenMinutesBefore = new Date(targetTime.getTime() - 15 * 60000); // Subtract 15 minutes

        // const currentTime = new Date(); // Get the current time


        if (time_now_adhan === data.fajr && audioJson?.start === false && settings?.notifications_adhan) {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุญุงู ุงูุงู ููุช ุตูุงุฉ ุงููุฌุฑ';
            document.getElementById('audio').src = path.join(__dirname, `${settings.athan}`);
            document.getElementById('audio').volume = settings?.adhanVolume || 1;

            // Add an event listener for the "ended" event
            document.getElementById('audio').addEventListener('ended', () => {
                setTimeout(() => {
                    document.getElementById('audio').src = path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุฏุนุงุก_ุจุนุฏ_ุงูุตูุงุฉ_ุงูุดุนุฑุงูู.mp3');
                }, 2000);
            });

            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }
        // else if (currentTime.getTime() === fifteenMinutesBefore.getTime() && audioJson?.start === false && settings?.notifications_before_adhan) {
        //     audioBoolean(App_Path, true);
        //     ipcRenderer.send('show3');
        //     document.getElementById('text').innerText = 'ุจุงูู ุนูู ุตูุงุฉ ุงูุธูุฑ 15 ุฏูููุฉ'
        //     document.getElementById('audio').src = path.join(__dirname, '');
        //     setTimeout(() => {
        //         audioBoolean(App_Path, false);
        //     }, 65000);
        // }

        else if (time_now_adhan === data.dhuhr && audioJson?.start === false && settings?.notifications_adhan && settingss.athan !== "") {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุญุงู ุงูุงู ููุช ุตูุงุฉ ุงูุธูุฑ'
            document.getElementById('audio').src = path.join(__dirname, `${settings.athan}`);
            document.getElementById('audio').volume = settings?.adhanVolume || 1;
            document.getElementById('audio').addEventListener('ended', () => {
                setTimeout(() => {
                    document.getElementById('audio').src = path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุฏุนุงุก_ุจุนุฏ_ุงูุตูุงุฉ_ุงูุดุนุฑุงูู.mp3');
                }, 2000);
            });
            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }



        else if (time_now_adhan === data.asr && audioJson?.start === false && settings?.notifications_adhan) {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุญุงู ุงูุงู ููุช ุตูุงุฉ ุงูุนุตุฑ'
            document.getElementById('audio').src = path.join(__dirname, `${settings.athan}`);
            document.getElementById('audio').volume = settings?.adhanVolume || 1;
            document.getElementById('audio').addEventListener('ended', () => {
                setTimeout(() => {
                    document.getElementById('audio').src = path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุฏุนุงุก_ุจุนุฏ_ุงูุตูุงุฉ_ุงูุดุนุฑุงูู.mp3');
                }, 2000);
            });
            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }

        else if (time_now_adhan === data.maghrib && audioJson?.start === false && settings?.notifications_adhan) {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุญุงู ุงูุงู ููุช ุตูุงุฉ ุงููุบุฑุจ'
            document.getElementById('audio').src = path.join(__dirname, `${settings.athan}`);
            document.getElementById('audio').volume = settings?.adhanVolume || 1;
            document.getElementById('audio').addEventListener('ended', () => {
                setTimeout(() => {
                    document.getElementById('audio').src = path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุฏุนุงุก_ุจุนุฏ_ุงูุตูุงุฉ_ุงูุดุนุฑุงูู.mp3');
                }, 2000);
            });
            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }

        else if (time_now_adhan === data.isha && audioJson?.start === false && settings?.notifications_adhan) {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุญุงู ุงูุงู ููุช ุตูุงุฉ ุงูุนุดุงุก'
            document.getElementById('audio').src = path.join(__dirname, `${settings.athan}`);
            document.getElementById('audio').volume = settings?.adhanVolume || 1;
            document.getElementById('audio').addEventListener('ended', () => {
                setTimeout(() => {
                    document.getElementById('audio').src = path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุฏุนุงุก_ุจุนุฏ_ุงูุตูุงุฉ_ุงูุดุนุฑุงูู.mp3');
                }, 2000);
            });
            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }

        else if (time_now_adhkar === settings?.morning_adhkar_time && audioJson?.start === false && settings?.notifications_adhkar) {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุฃุฐูุงุฑ ุงูุตุจุงุญ โ๏ธ | ุจุตูุช ุฅุฏุฑูุณ ุฃุจูุฑ ๐';
            document.getElementById('audio').src = path.join(__dirname, '../public/audio/AM.mp3');
            document.getElementById('audio').volume = settings?.adhanVolume || 1;
            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }

        else if (time_now_adhkar === settings?.evening_adhkar_time && audioJson?.start === false && settings?.notifications_adhkar) {
            audioBoolean(App_Path, true);
            ipcRenderer.send('show3');
            document.getElementById('text').innerText = 'ุฃุฐูุงุฑ ุงููุณุงุก ๐ | ุจุตูุช ููุตู ุจู ุฌุฐูุงู ๐';
            document.getElementById('audio').src = path.join(__dirname, '../public/audio/PM.mp3');
            document.getElementById('audio').volume = settings?.adhanVolume || 1;
            setTimeout(() => {
                audioBoolean(App_Path, false);
            }, 65000);
        }

        // ุงูุตูุงุฉ ุนูู ุงููุจู ููู ุงูุฌูุนุฉ

        else if (settings?.zekr_duration && audioJson?.start === false) {
            let zekr_duration_number = parseInt(settings.zekr_duration);

            let currentDate = new Date();
            let currentDay = currentDate.getDay();


            // Check if the current day is Friday (day number 5)
            if (currentDay === 5) {
                const audioListFriday = [
                    { text: 'ูุง ุชูุณู ุงูุตูุงุฉ ุนูู ุงููุจู ๏ทบ ููุฑุงุกุฉ ุณูุฑุฉ ุงูููู', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุฐูุฑ_ุงูุตูุงุฉ_ุนูู_ุงููุจู_ุงูุฌูุนุฉ.mp3') },
                    { text: 'ููููุงูู ุตูู ุงููู ุนููู ูุณูู: ((ููุง ูููู ุฃูุญูุฏู ููุณูููููู ุนูููููู ุฅููุงูู ุฑูุฏูู ุงูููููู ุนูููููู ุฑููุญููู ุญูุชููู ุฃูุฑูุฏูู ุนููููููู ุงูุณูููุงููู))', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ูุง_ูู_ุฃุญุฏ_ูุณูู_ุนูู.mp3') },
                    { text: 'ููุงูู ุงููููุจูููู ุตูู ุงููู ุนููู ูุณูู: ((ูููู ุตููููู ุนูููููู ุตููุงูุฉู ุตููููู ุงูููููู ุนููููููู ุจูููุง ุนูุดูุฑุงู))', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ูุถู_ุงูุตูุงุฉ_ุนูู_ุงููุจู.mp3') },
                    { text: 'ููููุงูู ุตูู ุงููู ุนููู ูุณูู: ((ุงููุจูุฎูููู ูููู ุฐูููุฑูุชู ุนูููุฏููู ูููููู ููุตูููู ุนูููููู))', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุจุฎูู_ูู_ูู_ูุตูู_ุนูู.mp3') },
                    { text: 'ุตูู ุนูู ูุญูุฏ ๏ทบ', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุตูู_ุนูู_ูุญูุฏ.mp3') },


                ];

                const randomIndexFriday = Math.floor(Math.random() * audioListFriday.length);
                const randomItemFriday = audioListFriday[randomIndexFriday];

                audioBoolean(App_Path, true);
                if (randomIndexFriday === 0 || randomIndexFriday === 1 || randomIndexFriday === 2 || randomIndexFriday === 3) {
                    ipcRenderer.send('show3');
                    document.getElementById('text').innerText = randomItemFriday.text;
                    document.getElementById('audio').src = randomItemFriday.audioPath;
                    setTimeout(() => {
                        audioBoolean(App_Path, false);
                    }, zekr_duration_number * 60 * 1000);

                } else {

                    document.getElementById('text').innerText = randomItemFriday.text;
                    document.getElementById('audio').src = randomItemFriday.audioPath;
                    setTimeout(() => {
                        audioBoolean(App_Path, false);
                    }, zekr_duration_number * 60 * 1000);
                }

            }

            // ุงูุฅุณุชุบูุงุฑ
            else {
                const audioList = [
                    { text: 'ุงูุฅุณุชุบูุงุฑ', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุฃุณุชุบูุฑ_ุงููู.mp3') },
                    // Add more items to the list with text and audio path
                    { text: 'ุงูุตูุงุฉ ุนูู ุงููุจู', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุฐูุฑ_ุงูุตูุงุฉ_ุนูู_ุงููุจู.mp3') },
                    { text: 'ุณุจุญุงู ุงููู ูุจุญูุฏู', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุณุจุญุงู_ุงููู_ูุจุญูุฏู.mp3') },
                    { text: 'ุนููุง ูุงูุนุง', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูููู_ุฅูู_ุงุณุฃูู_ุนููุง_ูุงูุนุง.mp3') },
                    { text: 'ุงูููู ุฃูุช ุฑุจู ', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูููู_ุงูุช_ุฑุจู.mp3') },
                    { text: 'ูุง ุฅูู ุฅูุง ุงููู', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ูุง_ุฅูู_ุฅูุง_ุงููู.mp3') },
                    { text: 'ุญุณุจู ุงููู', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุญุณุจู_ุงููู.mp3') },
                    { text: 'ุฑุถูุช ุจุงููู ุฑุจุง', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุฑุถูุช_ุจุงููู_ุฑุจุง.mp3') },
                    { text: 'ุงูุจุงููุงุช ุงูุตุงูุญุงุช', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงูุจุงููุงุช_ุงูุตุงูุญุงุช.mp3') },
                    { text: 'ุฃุนูุฐ ุจูููุงุช ุงููู ุงูุชุงูุงุช', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุฃุนูุฐ_ุจูููุงุช_ุงููู.mp3') },
                    { text: 'ุณุจุญุงูู ุงูููู ุฑุจูุง ูุจุญูุฏู', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุณุจุญุงูู_ุงูููู_ูุจุญูุฏู.mp3') },
                    { text: 'ุณูุฑ ุงููุงุณ - ุงูููู - ุงูุฅุฎูุงุต', audioPath: path.join(__dirname, '../public/audio/ุฃุฐูุงุฑ/ุงููุงุณ_ุงูููู_ุงูุฅุฎูุงุต.mp3') },


                ];

                // Select a random item from the audioList
                const randomIndex = Math.floor(Math.random() * audioList.length);
                const randomItem = audioList[randomIndex];

                audioBoolean(App_Path, true);
                document.getElementById('text').innerText = randomItem.text;
                document.getElementById('audio').src = randomItem.audioPath;
                setTimeout(() => {
                    audioBoolean(App_Path, false);
                }, zekr_duration_number * 60 * 1000);
            }
        }

    }

});

function audioBoolean(App_Path, boolean) {
    const audioJson = fs.readJsonSync(path.join(App_Path, './data/audio_window.json'));
    audioJson.start = boolean
    fs.writeJsonSync(path.join(App_Path, './data/audio_window.json'), audioJson);
}